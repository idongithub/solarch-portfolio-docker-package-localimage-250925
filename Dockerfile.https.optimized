# Optimized HTTPS-enabled Dockerfile - Minimal final image with SSL support and environment injection
FROM node:18-alpine as build-stage

# Set working directory
WORKDIR /app/frontend

# Copy package files for dependency installation
COPY frontend/package.json frontend/package-lock.json ./

# Install all dependencies (including dev deps needed for build)
RUN npm ci --legacy-peer-deps

# Copy source and build
COPY frontend/ .

# Build arguments for environment variables
ARG REACT_APP_BACKEND_URL=http://localhost:8001
ARG REACT_APP_KONG_HOST=192.168.86.75
ARG REACT_APP_KONG_PORT=8443
ARG REACT_APP_BACKEND_URL_HTTP=http://192.168.86.75:3001
ARG REACT_APP_RECAPTCHA_SITE_KEY=6LcgftMrAAAAAPJRuWA4mQgstPWYoIXoPM4PBjMM

# Set environment variables for build
ENV REACT_APP_BACKEND_URL=$REACT_APP_BACKEND_URL
ENV REACT_APP_KONG_HOST=$REACT_APP_KONG_HOST
ENV REACT_APP_KONG_PORT=$REACT_APP_KONG_PORT
ENV REACT_APP_BACKEND_URL_HTTP=$REACT_APP_BACKEND_URL_HTTP
ENV REACT_APP_RECAPTCHA_SITE_KEY=$REACT_APP_RECAPTCHA_SITE_KEY

RUN npm run build && \
    npm cache clean --force && \
    rm -rf ~/.npm node_modules src public package*.json *.config.js *.md && \
    rm -rf .git .gitignore .env* && \
    find . -name "*.test.*" -delete && \
    find . -name "*.spec.*" -delete

# Production stage with HTTPS support
FROM nginx:alpine as production

# Install OpenSSL and wget for SSL and health checks in single layer
RUN apk add --no-cache openssl wget && \
    rm -rf /var/cache/apk/* /tmp/* /var/tmp/*

# Copy built React files
COPY --from=build-stage /app/frontend/build /usr/share/nginx/html

# Create SSL directory and copy configuration
RUN mkdir -p /etc/nginx/ssl
COPY nginx-https.conf /etc/nginx/conf.d/default.conf

# Generate optimized self-signed certificate for development
RUN openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
    -keyout /etc/nginx/ssl/portfolio.key \
    -out /etc/nginx/ssl/portfolio.crt \
    -subj "/C=UK/ST=London/L=London/O=ARCHSOL IT Solutions/CN=localhost" && \
    chmod 600 /etc/nginx/ssl/portfolio.key && \
    chmod 644 /etc/nginx/ssl/portfolio.crt

# Clean up and set permissions in single layer for security
RUN rm -rf /etc/nginx/conf.d/default.conf.bak \
           /usr/share/nginx/html/index.html.bak \
           /tmp/* \
           /var/tmp/* && \
    mkdir -p /var/cache/nginx /etc/nginx/ssl && \
    touch /var/run/nginx.pid && \
    chown -R nginx:nginx /usr/share/nginx/html /var/cache/nginx /var/run/nginx.pid /etc/nginx/ssl && \
    chmod -R 755 /usr/share/nginx/html

EXPOSE 80 443

# HTTPS-focused health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD wget --no-check-certificate --no-verbose --tries=1 --spider --timeout=10 https://localhost/ || wget --no-verbose --tries=1 --spider --timeout=5 http://localhost/ || exit 1

USER nginx
CMD ["nginx", "-g", "daemon off;"]